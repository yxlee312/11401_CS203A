#include <stdio.h>
#include <stdlib.h>
int main() 
{
    int *array;
    int n = 10;
    array = (int *) malloc(n * sizeof(int));
    if (array == NULL) 
    {
        printf("Memory allocation failed\n");
        return 1;
    }
    printf("Initial memory address: %p\n", (void*)array);
    printf("Initial memory end address: %p\n", (void*)(array + n - 1));
    for (int i = 0; i < n; i++) 
    {
        array[i] = i + 1;
    }
    printf("Initial array:\n");
    for (int i = 0; i < n; i++) 
    {
        printf("Index %d -> Value: %d, Address: %p\n", i, array[i], (void*)&array[i]);
    }
    n = n * 2;
    array = (int *) realloc(array, n * sizeof(int));
    if (array == NULL) 
    {
        printf("Reallocation failed\n");
        return 1;
    }
    printf("\nAfter realloc memory address: %p\n", (void*)array);
    printf("After realloc end address: %p\n", (void*)(array + n - 1));
    for (int i = n/2; i < n; i++) 
    {
        array[i] = i + 1;
    }
    printf("Resized array:\n");
    for (int i = 0; i < n; i++) 
    {
        printf("Index %d -> Value: %d, Address: %p\n", i, array[i], (void*)&array[i]);
    }
    free(array);
    return 0;
}
